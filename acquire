#!/usr/bin/env python

import argparse
from slsdet import Eiger, runStatus
import subprocess
from pathlib import Path
parser = argparse.ArgumentParser()
parser.add_argument("n_frames", type = int)
args = parser.parse_args()

d = Eiger()

restart = False
if d.status == runStatus.RUNNING:
    d.stopDetector()
    d.stopReceiver()
    previous_frames = d.frames
    restart = True

#Setup measurement 
d.fwrite = True
d.frames = args.n_frames

#Grab path so that we can convert the files
fpath = Path(d.fpath)/f'{d.fname}_master_{d.findex}.raw'

#Starts receiver and detector and saves frames
d.acquire()

#convert to hdf5 and add gap pixelss
subprocess.run(['raw2hdf5', '--fastquad',fpath.as_posix(), fpath.parent/'hdf5'])

if restart:
    d.frames = previous_frames
    d.fwrite = False
    d.startReceiver()
    d.startDetector()